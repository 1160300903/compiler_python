Terminate
do if else int boolean float while struct def call true false char print input
+ - * / > < >= <= == != && || !
( ) { } [ ] ; = , . #
id CI CF CC
Variable
start#拓广文法
P'#产生多个P
P#开始符号
D#定义语句
S#赋值语句
W'#生成多个W
Param#参数定义
T#类型信息
X#基本类型
C#数据括号
L#数组引用
E#运算式
Y#运算式
F#运算式
M#运算式
B#逻辑表达式
G#逻辑表达式
H#逻辑表达式
I#逻辑表达式
R#比较运算符
Elist#参数列表
Left#产生式左部
M1#标记性非终结符
M2#标记性非终结符
Expression
start::=P'
P'::=P' P
P'::=P
P::=D
P::=S


D::=def id M1 ( Param ) { W' } 
M1::=ε 
W'::=S 
W'::=W' S 
S::=T id ; 
Param::=T id 
Param::=Param , T id 
T::=X C 
T::=struct { M2 Param } 
M2::=ε 
X::=int 
X::=float 
X::=boolean 
X::=char 
C::=[ CI ] C 
C::=ε 

S::=print ( CC ) ;
S::=print ( id ) ;
S::=input ( id ) ;

S::=Left = E ;
S::=Left = B ;
Left::=id 
Left::=L 
Left::=id . Left 
L::=id [ E ] 
L::=L [ E ] 
E::=E + Y 
E::=E - Y 
E::=Y 
Y::=Y * F 
Y::=Y / F 
Y::=F 
F::=( M ) 
F::=M 
M::=Left
M::=CI
M::=CF
M::=CC

S::= if B { S }
S::= if B { S } else { S }
S::= while B do { S }
B::=B || G
B::=G
G::=G && H
G::=H
H::=! H
H::=I
I::=E R E
I::=( B )
I::=true
I::=false		
R::=<
R::=< =
R::== =
R::=! =
R::=>
R::=> =			

S::=call id ( Elist ) ;
Elist::=Elist , E
Elist::=ε